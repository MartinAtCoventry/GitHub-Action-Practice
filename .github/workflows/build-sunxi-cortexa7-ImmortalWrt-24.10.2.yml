name: build-sunxi-cortexa7-ImmortalWrt-24.10.2

on:
  workflow_dispatch:
    inputs:
      profile:
        type: choice
        description: |
          select a device modelï¼š
        required: true
        options:  
          - friendlyarm_nanopi-r1
          - xunlong_orangepi-zero
        default: 'friendlyarm_nanopi-r1'
      rootfs_partsize:
        description: 'Setting the partsize of software packages (MB)'
        required: true
        default: '1024'
      wlan_name:
        description: 'Setting a name for the WiFi ssid'
        required: true
        default: 'Protable-JAS-Router'
      wlan_password:
        description: 'Setting a password for accessing the WiFi'
        required: true
        default: '12345678'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: chmod +x ${{ github.workspace }}/sunxi-cortexa7/build.sh

      - name: Download Clash Meta, GeoIP, and GeoSite
        run: |
          PLATFORM="armv7"
          mkdir -p files/etc/openclash/core
          # Download clash_meta
          META_URL="https://raw.githubusercontent.com/vernesong/OpenClash/core/master/meta/clash-linux-${PLATFORM}.tar.gz"
          wget -qO- $META_URL | tar xOvz > files/etc/openclash/core/clash_meta
          chmod +x files/etc/openclash/core/clash_meta
          # Download GeoIP and GeoSite
          wget -q https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat -O files/etc/openclash/GeoIP.dat
          wget -q https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat -O files/etc/openclash/GeoSite.dat

      - name: Building sunxi-cortexa7 ImmortalWrt 24.10.2
        run: |
          profiles="${{ github.event.inputs.profile }}"
          include_docker="${{ github.event.inputs.include_docker }}"
          rootfs_partsize="${{ github.event.inputs.rootfs_partsize }}"
          
          IFS=',' read -r -a profile_array <<< "$profiles"
          
          for profile in "${profile_array[@]}"; do
            echo "Building for profile: $profile"
            
            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/sunxi-cortexa7/files:/home/build/immortalwrt/files" \
              -v "${{ github.workspace }}/sunxi-cortexa7/build.sh:/home/build/immortalwrt/build.sh" \
              -e PROFILE=$profile \
              -e ROOTFS_PARTSIZE=$rootfs_partsize \
              -e WLAN_NAME=${{ inputs.wlan_name }} \
              -e WLAN_PASSWORD=${{ inputs.wlan_password}} \
              immortalwrt/imagebuilder:sunxi-cortexa7-openwrt-24.10.2 /bin/bash /home/build/immortalwrt/build.sh
          done

      - name: Generate Firmware SHA-256
        run: |
          cp ${{ github.workspace }}/bin/targets/sunxi/cortexa7/*.img.gz ${{ github.workspace }}
          for file in *.img.gz; do
            sha256sum "$file" > "$file.sha256"
            sha256sum -c "$file.sha256"
          done

      - name: Upload ImmortalWrt firmware to artifact
        uses: actions/upload-artifact@v4
        with:
          name: ImmortalWrt-24.10.2-sunxi-cortexa7-${{ github.event.inputs.profile }}
          path: |
            ${{ github.workspace }}/*.img.gz
            ${{ github.workspace }}/*.sha256
          compression-level: 0
          retention-days: 1
