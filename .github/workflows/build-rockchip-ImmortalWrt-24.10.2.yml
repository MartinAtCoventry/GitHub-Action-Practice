name: build-rockchip-ImmortalWrt-24.10.2

on:
  workflow_dispatch:
    inputs:
      profile:
        type: choice
        description: |
          select a device modelï¼š
        required: true
        options:  
          - friendlyarm_nanopi-r2s
          - friendlyarm_nanopi-r4s
          - friendlyarm_nanopi-r4s-enterprise
          - friendlyarm_nanopi-r4se
          - friendlyarm_nanopi-r5c
          - friendlyarm_nanopi-r5s
          - friendlyarm_nanopi-r6c
          - friendlyarm_nanopi-r6s
          - radxa_cm3_io
          - radxa_e25
          - radxa_rock-3a
          - radxa_rock-3b
          - radxa_rock-3c
          - radxa_rock-5a
          - radxa_rock-5b
          - radxa_rock-pi-4a
          - radxa_rock-pi-e
          - radxa_rock-pi-s
          - radxa_zero-3e
          - radxa_zero-3w
          - sinovoip_bpi-r2-pro
          - xunlong_orangepi-5
          - xunlong_orangepi-5-plus
          - xunlong_orangepi-r1-plus
          - xunlong_orangepi-r1-plus-lts
        default: 'friendlyarm_nanopi-r4s'
      rootfs_partsize:
        description: 'Setting the partsize of software packages (MB)'
        required: true
        default: '1024'
      include_docker:
        type: choice
        description: |
          Do you want to have the Docker package?
        required: true
        options:
          - 'with'
          - 'without'
        default: 'without'
      enable_pppoe:
        type: choice
        description: "Do you want to preset a PPPoE virtual dial-up?"
        required: true
        options:
        - 'yes'
        - 'no'
        default: 'no'
      pppoe_account:
        description: "PPPoE Account (if enabled PPPoE):"
        required: false
      pppoe_password:
        description: "PPPoE Password (if enabled PPPoE):"
        required: false

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set executable permissions
        run: chmod +x ${{ github.workspace }}/rockchip/build.sh

      - name: Validate PPPoE Inputs
        run: |
          if [[ "${{ inputs.enable_pppoe }}" == "yes" ]]; then
            if [[ -z "${{ inputs.pppoe_account }}" || -z "${{ inputs.pppoe_password }}" ]]; then
              echo "Error: PPPoE account and password must be provided when PPPoE is enabled!"
              exit 1
            fi
          fi

      - name: Download Clash Meta, GeoIP, and GeoSite
        run: |
          PLATFORM="arm64"
          mkdir -p files/etc/openclash/core
          # Download clash_meta
          META_URL="https://raw.githubusercontent.com/vernesong/OpenClash/core/master/meta/clash-linux-${PLATFORM}.tar.gz"
          wget -qO- $META_URL | tar xOvz > files/etc/openclash/core/clash_meta
          chmod +x files/etc/openclash/core/clash_meta
          # Download GeoIP and GeoSite
          wget -q https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geoip.dat -O files/etc/openclash/GeoIP.dat
          wget -q https://github.com/Loyalsoldier/v2ray-rules-dat/releases/latest/download/geosite.dat -O files/etc/openclash/GeoSite.dat

      - name: Building Rockchip ImmortalWrt 24.10.2
        run: |
          profiles="${{ github.event.inputs.profile }}"
          include_docker="${{ github.event.inputs.include_docker }}"
          rootfs_partsize="${{ github.event.inputs.rootfs_partsize }}"
          
          IFS=',' read -r -a profile_array <<< "$profiles"
          
          for profile in "${profile_array[@]}"; do
            echo "Building for profile: $profile"
            
            docker run --rm -i \
              --user root \
              -v "${{ github.workspace }}/bin:/home/build/immortalwrt/bin" \
              -v "${{ github.workspace }}/files:/home/build/immortalwrt/files" \
              -v "${{ github.workspace }}/rockchip/imm.config:/home/build/immortalwrt/.config" \
              -v "${{ github.workspace }}/rockchip/build.sh:/home/build/immortalwrt/build.sh" \
              -e PROFILE=$profile \
              -e INCLUDE_DOCKER=$include_docker \
              -e ROOTFS_PARTSIZE=$rootfs_partsize \
              -e ENABLE_PPPOE=${{ inputs.enable_pppoe }} \
              -e PPPOE_ACCOUNT=${{ inputs.pppoe_account }} \
              -e PPPOE_PASSWORD=${{ inputs.pppoe_password }} \
              immortalwrt/imagebuilder:rockchip-armv8-openwrt-24.10.2 /bin/bash /home/build/immortalwrt/build.sh
          done

      - name: Generate Firmware SHA-256
        run: |
          cp ${{ github.workspace }}/bin/targets/rockchip/armv8/*.img.gz ${{ github.workspace }}
          for file in *.img.gz; do
            sha256sum "$file" > "$file.sha256"
            sha256sum -c "$file.sha256"
          done

      - name: Upload ImmortalWrt firmware to artifact
        uses: actions/upload-artifact@v4
        with:
          name: ImmortalWrt-24.10.2-rockchip-${{ github.event.inputs.profile }}-${{ github.event.inputs.include_docker }}-docker
          path: |
            ${{ github.workspace }}/*.img.gz
            ${{ github.workspace }}/*.sha256
          compression-level: 0
          retention-days: 1
